<UserControl
    x:Class="screenerWpf.ImageEditorControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:colorpicker="clr-namespace:ColorPicker;assembly=ColorPicker"
    xmlns:controls="clr-namespace:screenerWpf.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:screenerWpf"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    HorizontalAlignment="Stretch"
    VerticalAlignment="Stretch">

    <!-- Define local resources for the UserControl -->
    <UserControl.Resources>
        <!-- Set default background style for UserControl to white -->
        <Style TargetType="UserControl">
            <Setter Property="Background" Value="White" />
        </Style>
    </UserControl.Resources>

    <!-- Define key bindings for common operations like Copy, Paste, Save, Undo, Redo, and Delete -->
    <UserControl.InputBindings>
        <KeyBinding
            Key="C"
            Command="{Binding CopyCommand}"
            Modifiers="Control" />
        <KeyBinding
            Key="V"
            Command="{Binding PasteCommand}"
            Modifiers="Control" />
        <KeyBinding
            Key="S"
            Command="{Binding SaveCommand}"
            Modifiers="Control" />
        <KeyBinding
            Key="Z"
            Command="{Binding UndoCommand}"
            Modifiers="Control" />
        <KeyBinding
            Key="Z"
            Command="{Binding RedoCommand}"
            Modifiers="Control+Shift" />
        <KeyBinding 
            Key="Delete" 
            Command="{Binding DeleteCommand}" />
    </UserControl.InputBindings>

    <!-- Main Layout Grid for the UserControl -->
    <Grid Margin="5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <!-- Title Bar -->
            <RowDefinition Height="20.933" />
            <RowDefinition Height="19.067" />
            <!-- Space for StackPanel -->
            <RowDefinition Height="*" />
            <!-- Main Content -->
            <RowDefinition Height="Auto" />
            <!-- Bottom Bar -->
        </Grid.RowDefinitions>

        <!-- Tool Button Section, positioned at Row 3 -->
        <Grid
            Grid.Row="3"
            MaxWidth="120"
            Margin="0,3,0,3"
            HorizontalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!-- Save Button - Uses RoundedButtonStyle and an Image as its content -->
            <Button
                Grid.Row="0"
                Grid.Column="0"
                Width="{DynamicResource StandardWidth}"
                Height="{DynamicResource StandardHeight}"
                Command="{Binding SaveCommand}"
                Style="{DynamicResource RoundedButtonStyle}">
                <Button.Content>
                    <Image Source="{DynamicResource FileIcon}" />
                </Button.Content>
            </Button>

            <!-- Draw Arrow Button -->
            <Button
                Grid.Row="1"
                Grid.Column="0"
                Width="{DynamicResource StandardWidth}"
                Height="{DynamicResource StandardHeight}"
                Command="{Binding DrawArrowCommand}"
                Style="{DynamicResource RoundedButtonStyle}">
                <Button.Content>
                    <Image Source="{DynamicResource ArrowLeftIcon}" />
                </Button.Content>
            </Button>

            <!-- Add Text Button -->
            <Button
                Grid.Row="1"
                Grid.Column="1"
                Width="{DynamicResource StandardWidth}"
                Height="{DynamicResource StandardHeight}"
                Command="{Binding AddTextCommand}"
                Style="{DynamicResource RoundedButtonStyle}">
                <Button.Content>
                    <Image Source="{DynamicResource TextIcon}" />
                </Button.Content>
            </Button>

            <!-- Draw Rectangle Button -->
            <Button
                Grid.Row="2"
                Grid.Column="0"
                Width="{DynamicResource StandardWidth}"
                Height="{DynamicResource StandardHeight}"
                Command="{Binding DrawRectCommand}"
                Style="{DynamicResource RoundedButtonStyle}">
                <Button.Content>
                    <Image Source="{DynamicResource RectIcon}" />
                </Button.Content>
            </Button>

            <!-- Blur Area Button -->
            <Button
                Grid.Row="2"
                Grid.Column="1"
                Width="{DynamicResource StandardWidth}"
                Height="{DynamicResource StandardHeight}"
                Command="{Binding BlurCommand}"
                Style="{DynamicResource RoundedButtonStyle}">
                <Button.Content>
                    <Image Source="{DynamicResource BlurIcon}" />
                </Button.Content>
            </Button>

            <!-- Speech Bubble Button -->
            <Button
                Grid.Row="3"
                Grid.Column="0"
                Width="{DynamicResource StandardWidth}"
                Height="{DynamicResource StandardHeight}"
                Command="{Binding SpeechBubbleCommand}"
                Style="{DynamicResource RoundedButtonStyle}">
                <Button.Content>
                    <Image Source="{DynamicResource BubbleIcon}" />
                </Button.Content>
            </Button>

            <!-- Brush Tool Button -->
            <Button
                Grid.Row="3"
                Grid.Column="1"
                Width="{DynamicResource StandardWidth}"
                Height="{DynamicResource StandardHeight}"
                Command="{Binding BrushCommand}"
                Style="{DynamicResource RoundedButtonStyle}">
                <Button.Content>
                    <Image Source="{DynamicResource BrushIcon}" />
                </Button.Content>
            </Button>

            <!-- Commented-out Buttons without icons, reserved for additional functionality -->

            <!--
            <Button
                Grid.Row="4"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Width="100"
                Command="{Binding RecognizeTextCommand}"
                Content="Recognize Text"
                FontSize="{DynamicResource StandardFontSize}"
                Style="{DynamicResource RoundedButtonStyle}"/>

            <Button
                Grid.Row="5"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Width="100"
                Command="{Binding AddNiceBackgroundCommand}"
                Content="Nice background"
                Style="{DynamicResource RoundedButtonStyle}"/>

            <Button
                Grid.Row="6"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Width="100"
                Command="{Binding UploadToDropboxCommand}"
                Content="Upload to Dropbox"
                FontSize="{DynamicResource StandardFontSize}"
                Style="{DynamicResource RoundedButtonStyle}"/>
            -->

            <!-- Resize Image Button -->
            <Button
                Grid.Row="7"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Command="{Binding ResizeCommand}"
                Style="{DynamicResource RoundedButtonStyle}"
                ToolTip="Resize image">
                <Button.Content>
                    <Image Source="{DynamicResource ResizeIcon}" />
                </Button.Content>
            </Button>

            <!-- Undo Button -->
            <Button
                Grid.Row="8"
                Grid.Column="0"
                Command="{Binding UndoCommand}"
                Style="{DynamicResource RoundedButtonStyle}"
                ToolTip="(Ctrl+Z)">
                <Button.Content>
                    <Image Source="{DynamicResource UndoIcon}" />
                </Button.Content>
            </Button>

            <!-- Redo Button -->
            <Button
                Grid.Row="8"
                Grid.Column="1"
                Command="{Binding RedoCommand}"
                Style="{DynamicResource RoundedButtonStyle}"
                ToolTip="(Ctrl+Y)">
                <Button.Content>
                    <Image Source="{DynamicResource RedoIcon}" />
                </Button.Content>
            </Button>
        </Grid>

        <!-- StackPanel for the editing properties (e.g., Color, Thickness, Font) -->
        <StackPanel
            Grid.Row="1"
            Grid.RowSpan="2"
            Grid.ColumnSpan="2"
            Width="Auto"
            HorizontalAlignment="Left"
            Orientation="Horizontal">

            <!-- Label and Color Picker for selecting Color -->
            <Border
                Margin="5,5,0,5"
                CornerRadius="5,0,0,5"
                Style="{DynamicResource TitleBarStyleMain}"
                Visibility="{Binding IsColorVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Label Content="Color:" />
            </Border>
            <Border
                Margin="0,5,5,5"
                CornerRadius="0,5,5,0"
                Style="{DynamicResource TitleBarStyleMain}"
                Visibility="{Binding IsColorVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <colorpicker:PortableColorPicker
                    Width="20"
                    Height="20"
                    SelectedColor="{Binding SelectedColor, Mode=TwoWay}" />
            </Border>

            <!-- Label and ComboBox for selecting Thickness -->
            <Border
                Margin="5,5,0,5"
                CornerRadius="5,0,0,5"
                Style="{DynamicResource TitleBarStyleMain}"
                Visibility="{Binding IsThicknessVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Label Content="Thickness:" />
            </Border>
            <Border
                Margin="0,5,5,5"
                CornerRadius="0,5,5,0"
                Style="{DynamicResource TitleBarStyleMain}"
                Visibility="{Binding IsThicknessVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <ComboBox
                    Margin="0,0,5,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    BorderBrush="{x:Null}"
                    BorderThickness="0"
                    ItemsSource="{Binding Thicknesses}"
                    SelectedItem="{Binding SelectedThickness, Mode=TwoWay}" />
            </Border>

            <!-- Label and ComboBox for selecting Font Family -->
            <Border
                Margin="5,5,0,5"
                CornerRadius="5,0,0,5"
                Style="{DynamicResource TitleBarStyleMain}"
                Visibility="{Binding IsFontFamilyVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Label Content="Font Family:" />
            </Border>
            <Border
                Margin="0,5,5,5"
                CornerRadius="0,5,5,0"
                Style="{DynamicResource TitleBarStyleMain}"
                Visibility="{Binding IsFontFamilyVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <ComboBox
                    Margin="0,0,5,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    BorderBrush="{x:Null}"
                    BorderThickness="0"
                    ItemsSource="{Binding FontFamilies}"
                    SelectedItem="{Binding SelectedFontFamily, Mode=TwoWay}" />
            </Border>

            <!-- Label and ComboBox for selecting Font Size -->
            <Border
                Margin="5,5,0,5"
                CornerRadius="5,0,0,5"
                Style="{DynamicResource TitleBarStyleMain}"
                Visibility="{Binding IsFontSizeVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Label Content="Font Size:" />
            </Border>
            <Border
                Margin="0,5,5,5"
                CornerRadius="0,5,5,0"
                Style="{DynamicResource TitleBarStyleMain}"
                Visibility="{Binding IsFontSizeVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <ComboBox
                    Margin="0,0,5,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    BorderBrush="{x:Null}"
                    BorderThickness="0"
                    ItemsSource="{Binding FontSizes}"
                    SelectedItem="{Binding SelectedFontSize, Mode=TwoWay}" />
            </Border>

            <!-- Label and ComboBox for selecting Transparency -->
            <Border
                Margin="5,5,0,5"
                CornerRadius="5,0,0,5"
                Style="{DynamicResource TitleBarStyleMain}"
                Visibility="{Binding IsTransparencyVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Label Content="Transparency:" />
            </Border>
            <Border
                Margin="0,5,5,5"
                CornerRadius="0,5,5,0"
                Style="{DynamicResource TitleBarStyleMain}"
                Visibility="{Binding IsTransparencyVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <ComboBox
                    Margin="0,0,5,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    BorderBrush="{x:Null}"
                    BorderThickness="0"
                    ItemsSource="{Binding TransparencySizes}"
                    SelectedItem="{Binding SelectedTransparency, Mode=TwoWay}" />
            </Border>
        </StackPanel>

        <!-- ViewBox for DrawableCanvas to enable drawing/editing elements -->
        <Border
            Grid.Row="3"
            Grid.Column="1"
            BorderThickness="1"
            CornerRadius="{DynamicResource StandardCornerRadius}">
            <Grid ClipToBounds="True">
                <Viewbox Stretch="Uniform">
                    <controls:DrawableCanvas
                        x:Name="drawableCanvas"
                        Margin="5"
                        Focusable="True"
                        MouseDoubleClick="Canvas_MouseDoubleClick"
                        MouseLeftButtonDown="Canvas_MouseLeftButtonDown"
                        MouseLeftButtonUp="Canvas_MouseLeftButtonUp"
                        MouseMove="Canvas_MouseMove">

                        <!-- Setting the background image for the drawable canvas -->
                        <controls:DrawableCanvas.Background>
                            <ImageBrush ImageSource="{Binding InitialImage, RelativeSource={RelativeSource AncestorType={x:Type local:ImageEditorControl}}}" Stretch="Uniform" />
                        </controls:DrawableCanvas.Background>

                        <!-- Displaying drawable elements on the canvas -->
                        <ItemsControl ItemsSource="{Binding Elements}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas IsItemsHost="True" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="FrameworkElement">
                                    <Setter Property="Canvas.Left" Value="{Binding Position.X}" />
                                    <Setter Property="Canvas.Top" Value="{Binding Position.Y}" />
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                        </ItemsControl>
                    </controls:DrawableCanvas>
                </Viewbox>
            </Grid>
        </Border>
    </Grid>
</UserControl>
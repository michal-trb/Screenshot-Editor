<Window x:Class="screenerWpf.ImageEditorWindow"
        xmlns:controls="clr-namespace:screenerWpf.Controls"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:screenerWpf"
        mc:Ignorable="d"
        Title="Image Editor" Height="600" Width="920"
        Style="{DynamicResource WindowStyle}"
        WindowStyle="None">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="LightStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid  Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="35"/>
            <!-- Pasek tytułu -->
            <RowDefinition Height="50"/>
            <!-- Przestrzeń dla StackPanel -->
            <RowDefinition Height="*"/>
            <!-- Główna zawartość -->
            <RowDefinition Height="Auto"/>
            <!-- Dolny pasek -->
        </Grid.RowDefinitions>
        <!-- Niestandardowy pasek tytułu -->
        <Border Grid.Row="0" Grid.ColumnSpan="2" 
            Background="{DynamicResource TitleBarBackgroundColor}" 
            Height="35"
            VerticalAlignment="Top" 
            MouseDown="TitleBar_MouseDown" 
            CornerRadius="5">
            <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- Przycisk Options po lewej stronie -->
                    <Button Grid.Column="0" Content="Options" Command="{Binding OptionsCommand}" Style="{StaticResource TitleBarButtonStyle}" HorizontalAlignment="Left" Grid.ColumnSpan="2" Margin="2,2,0,3" Width="71" />

                    <!-- StackPanel z przyciskami po prawej stronie -->
                    <StackPanel Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal">
                        <Button Content="_" Command="{Binding MinimizeCommand}" Style="{StaticResource TitleBarButtonStyle}"/>
                        <Button Content="[]" Command="{Binding MaximizeRestoreCommand}" Style="{StaticResource TitleBarButtonStyle}"/>
                        <Button Content="X" Command="{Binding CloseCommand}" Style="{StaticResource TitleBarButtonStyle}"/>
                    </StackPanel>
                </Grid>
        </Border>
        <!-- PRZYCISKI 
 -->

        <StackPanel Grid.Row="2" Grid.Column="0" Orientation="Vertical" HorizontalAlignment="Center">
            <Button Content="Save" Command="{Binding SaveCommand}" Style="{DynamicResource RoundedButtonStyle}" />
            <Button Content="Save PDF" Command="{Binding SavePdfCommand}" Style="{DynamicResource RoundedButtonStyle}" />
            <Button Content="Draw Arrow" Command="{Binding DrawArrowCommand}" Style="{DynamicResource RoundedButtonStyle}"/>
            <Button Content="Add Text" Command="{Binding AddTextCommand}" Style="{DynamicResource RoundedButtonStyle}"/>
            <Button Content="Draw Rect" Command="{Binding DrawRectCommand}" Style="{DynamicResource RoundedButtonStyle}"/>
            <Button Content="Blur" Command="{Binding BlurCommand}" Style="{DynamicResource RoundedButtonStyle}"/>
            <Button Content="Speech Bubble" Command="{Binding SpeechBubbleCommand}" Style="{DynamicResource RoundedButtonStyle}"/>
            <Button Content="Brush" Command="{Binding BrushCommand}" Style="{DynamicResource RoundedButtonStyle}"/>
            <Button Content="Recognize Text" Command="{Binding RecognizeTextCommand}" Style="{DynamicResource RoundedButtonStyle}"/>
            <Button Content="Dropbox" Command="{Binding UploadToDropboxCommand}" Style="{DynamicResource RoundedButtonStyle}"/>
        </StackPanel>
        <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" 
                HorizontalAlignment="Right" 
                Background="{DynamicResource PanelBackgroundBrush}">
            <Label Content="Color:" Style="{StaticResource LabelStyle}"/>
            <ComboBox Style="{StaticResource CustomComboBoxStyle}"
              Visibility="{Binding IsColorVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
              ItemsSource="{Binding Colors}"
              DisplayMemberPath="Name"
              SelectedItem="{Binding SelectedColor, Mode=TwoWay}"/>

            <Label Content="Thickness:" Style="{StaticResource LabelStyle}"
           Visibility="{Binding IsThicknessVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <ComboBox Style="{StaticResource CustomComboBoxStyle}"
              Visibility="{Binding IsThicknessVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
              ItemsSource="{Binding Thicknesses}"
              SelectedItem="{Binding SelectedThickness, Mode=TwoWay}"/>

            <Label Content="Font Family:" Style="{StaticResource LabelStyle}"
           Visibility="{Binding IsFontFamilyVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <ComboBox Style="{StaticResource CustomComboBoxStyle}"
              Visibility="{Binding IsFontFamilyVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
              ItemsSource="{Binding FontFamilies}"
              SelectedItem="{Binding SelectedFontFamily, Mode=TwoWay}"/>

            <Label Content="Font Size:" Style="{StaticResource LabelStyle}"
           Visibility="{Binding IsFontSizeVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <ComboBox Style="{StaticResource CustomComboBoxStyle}"
              Visibility="{Binding IsFontSizeVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
              ItemsSource="{Binding FontSizes}"
              SelectedItem="{Binding SelectedFontSize, Mode=TwoWay}"/>

            <Label Content="Transparency:" Style="{StaticResource LabelStyle}"
           Visibility="{Binding IsTransparencyVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <ComboBox Style="{StaticResource CustomComboBoxStyle}"
              Visibility="{Binding IsTransparencyVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
              ItemsSource="{Binding TransparencySizes}"
              SelectedItem="{Binding SelectedTransparency, Mode=TwoWay}"/>
        </StackPanel>


        <!-- ViewBox for DrawableCanvas -->
        <Border Grid.Row="2" Grid.Column="1" BorderThickness="1" CornerRadius="10">
            <Viewbox Stretch="Uniform">
                <controls:DrawableCanvas
                    x:Name="drawableCanvas" 
                    Focusable="True"
                    MouseLeftButtonDown="Canvas_MouseLeftButtonDown"
                    MouseLeftButtonUp="Canvas_MouseLeftButtonUp"
                    MouseMove="Canvas_MouseMove">
                    <controls:DrawableCanvas.Background>
                        <ImageBrush 
                            ImageSource="{Binding initialImage, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ImageEditorWindow}}}" 
                            Stretch="Uniform"/>
                    </controls:DrawableCanvas.Background>
                    <ItemsControl ItemsSource="{Binding Elements}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas IsItemsHost="True" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="{x:Type FrameworkElement}">
                                <Setter 
                                    Property="Canvas.Left"
                                    Value="{Binding Position.X}" />
                                <Setter 
                                    Property="Canvas.Top" 
                                    Value="{Binding Position.Y}" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <!-- Definicja wyglądu dla IDrawable (możesz wymagać szczegółowej konfiguracji w zależności od Twoich klas) -->
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </controls:DrawableCanvas>
            </Viewbox>
        </Border>
    </Grid>
</Window>
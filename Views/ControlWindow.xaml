<Window x:Class="screenerWpf.Views.ControlWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        WindowStyle="None"
        Topmost="True"
        Background="Transparent"
        AllowsTransparency="True"
        SizeToContent="WidthAndHeight">

    <Window.Resources>
        <!-- RoundedButtonStyle defines a button with a rounded corner and color change on interaction -->
        <Style x:Key="RoundedButtonStyle" TargetType="Button">
            <!-- Default appearance -->
            <Setter Property="Background" Value="#FFFF2F2F"/>
            <!-- Bright red background -->
            <Setter Property="BorderBrush" Value="#3E3E42"/>
            <!-- Dark gray border -->
            <Setter Property="BorderThickness" Value="1"/>
            <!-- Thin border -->
            <Setter Property="Foreground" Value="White"/>
            <!-- White text color -->
            <Setter Property="Height" Value="30"/>
            <!-- Button height -->
            <Setter Property="Width" Value="90"/>
            <!-- Button width -->

            <!-- Custom ControlTemplate to define rounded corners -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <!-- Border with rounded corners -->
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="10">
                            <!-- Rounded corners with radius of 10 -->
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                            <!-- Center the button content -->
                        </Border>
                        <!-- Triggers to change the button appearance when interacted with -->
                        <ControlTemplate.Triggers>
                            <!-- Change background when mouse hovers over the button -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFE60C0C"/>
                                <!-- Darker red when hovered -->
                            </Trigger>
                            <!-- Change background when button is pressed -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFEF6F6F"/>
                                <!-- Lighter red when pressed -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <!-- Stop button styled with RoundedButtonStyle -->
    <Button Content="Stop" Click="StopButton_Click" Style="{StaticResource RoundedButtonStyle}"/>
</Window>
